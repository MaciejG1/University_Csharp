<Application x:Class="File_Explorer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:File_Explorer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Globalny styl dla wszystkich przycisków (Button) w aplikacji -->
        <Style TargetType="Button">
            <!-- Domyślne wartości -->
            <Setter Property="Background" Value="#4A4A4A"/>
            <!-- Ciemny szary -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Biały tekst -->
            <Setter Property="BorderBrush" Value="Gray"/>
            <!-- Szare obramowanie -->
            <Setter Property="BorderThickness" Value="1"/>
            <!-- Grubość obramowania -->
            <Setter Property="Padding" Value="10,5"/>
            <!-- Dodanie trochę przestrzeni wokół tekstu -->

            <!-- Niestandardowy szablon dla przycisku -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Efekt po najechaniu myszką -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#6A6A6A"/>
                                <!-- Jaśniejszy szary -->
                            </Trigger>
                            <!-- Efekt po kliknięciu -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3A3A3A"/>
                                <!-- Ciemniejszy szary -->
                            </Trigger>
                            <!-- Efekt, gdy przycisk jest wyłączony -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                                <!-- Jasny szary dla wyłączonego -->
                                <Setter TargetName="border" Property="BorderBrush" Value="#AAAAAA"/>
                                <!-- Jaśniejsze obramowanie -->
                                <Setter Property="Foreground" Value="#777777"/>
                                <!-- Przyciemniony tekst -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Listview-->
        <!-- Globalny styl dla ListView -->
        <Style TargetType="ListView">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Background" Value="#2A2A2A"/>
            <!-- Tło ListView -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Kolor tekstu -->
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Globalny styl dla ListViewItem -->
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <!-- Domyślne przezroczyste tło elementu -->
            <Setter Property="Foreground" Value="White"/>
            <!-- Domyślnie biały tekst -->
            <Setter Property="Padding" Value="5,2"/>
            <!-- Trochę miejsca wokół elementu -->
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <!-- Definicja kolumn dla wyświetlania Name i CreationDate -->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Zawartość ListViewItem: nazwa pliku i data utworzenia -->
                                <TextBlock Text="{Binding Name}" Grid.Column="0" VerticalAlignment="Center" Padding="5"/>
                                <TextBlock Text="{Binding CreationDate}" 
                                           Grid.Column="1" VerticalAlignment="Center"  Padding="5"/>
                            </Grid>
                        </Border>

                        <!-- Efekty po najechaniu, zaznaczeniu itp. -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3A3A3A"/>
                                <!-- Jaśniejszy szary -->
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#5A5A5A"/>
                                <!-- Kolor zaznaczenia -->
                                <Setter Property="Foreground" Value="White"/>
                                <!-- Tekst w zaznaczonym elemencie -->
                            </Trigger>
                           
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                                <!-- Jasnoszary -->
                                <Setter TargetName="border" Property="BorderBrush" Value="#AAAAAA"/>
                                <Setter Property="Foreground" Value="#777777"/>
                                <!-- Przyciemniony tekst -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border"  Property="Background" Value="#3A3A3A"/>
                                <!-- Jaśniejszy szary -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
